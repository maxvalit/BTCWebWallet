@using Microsoft.AspNetCore.Mvc.Localization
@using BTCWebWallet.RPCClient
@using BTCWebWallet.Helpers

@inject IViewLocalizer Localizer

@model BlockChainInfoResult 

<div class="col">
    @if (Model != null)
    {
        <div class="card panel-default">
            <div class="card-header">@Localizer["BlockchainStatus"]</div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4 text-muted">@Localizer["Chain"]</div>
                    <div class="col-md-8">@Model.Chain</div>
                    <div class="col-md-4 text-muted">@Localizer["Blocks"]</div>
                    <div class="col-md-8">@Model.Blocks</div>
                    <div class="col-md-4 text-muted">@Localizer["Headers"]</div>
                    <div class="col-md-8">@Model.Headers</div>
                    @* <div class="col-md-4 text-muted">Best Block Hash</div>
                    <div class="col-md-8">@Model.Bestblockhash</div> *@
                    <div class="col-md-4 text-muted">@Localizer["Difficulty"]</div>
                    <div class="col-md-8">@Model.Difficulty.ToString("F16")</div>
                    <div class="col-md-4 text-muted">@Localizer["MedianTime"]</div>
                    <div class="col-md-8">@Model.Mediantime.ToDateTime().ToString()</div>                    
                    <div class="col-md-4 text-muted">@Localizer["VerificationProgress"]</div>
                    <div class="col-md-8">@Model.Verificationprogress</div>
                    <div class="col-md-4 text-muted">@Localizer["InitialBlockDownload"]</div>
                    <div class="col-md-8">
                        @if (Model.Initialblockdownload)
                        {
                            <i class="bi bi-check-lg"></i>
                        }
                        else
                        {
                            <i class="bi bi-x-lg"></i>
                        }
                    </div>
                    @* <div class="col-md-4 text-muted">Chain Work</div>
                    <div class="col-md-8">@Model.Chainwork</div> *@
                    <div class="col-md-4 text-muted">@Localizer["SizeOnDisk"]</div>
                    <div class="col-md-8">@Model.Size_on_disk.AsDiskSizeString()</div>
                    <div class="col-md-4 text-muted">@Localizer["Pruned"]</div>
                    <div class="col-md-8">
                        @if (Model.Pruned)
                        {
                            <i class="bi bi-check-lg"></i>
                        }
                        else
                        {
                            <i class="bi bi-x-lg"></i>
                        }
                    </div>
                    @if (Model.Pruned) 
                    {
                        <div class="col-md-4 text-muted">@Localizer["PruneHeight"]</div>
                        <div class="col-md-8">@Model.Pruneheight.AsDiskSizeString()</div>
                        <div class="col-md-4 text-muted">@Localizer["AutomaticPruning"]</div>
                        <div class="col-md-8">
                            @if (Model.Automatic_pruning)
                            {
                                <i class="bi bi-check-lg"></i>
                            }
                            else
                            {
                                <i class="bi bi-x-lg"></i>
                            }
                        </div>
                        <div class="col-md-4 text-muted">@Localizer["PruneTargetSize"]</div>
                        <div class="col-md-8">@Model.Prune_target_size.AsDiskSizeString()</div>
                    }
                    @if (Model.Softforks != null) 
                    {
                        <div class="col-md-12 h4">@Localizer["Softforks"]</div>
                        foreach (var softFork in Model.Softforks)
                        {
                            <div class="col-md-12">
                                <div class="card panel-info">
                                    <div class="card-header">@softFork.Key</div>
                                    <div class="card-body">
                                        @(await Html.PartialAsync("_SoftFork", softFork.Value))
                                    </div>
                                </div>                                
                            </div>
                        }
                    }                                                       
                    <div class="col-md-4 text-muted">@Localizer["Warnings"]</div>
                    <div class="col-md-8">@Model.Warnings</div>                    
                </div>
            </div>
        </div>
    }
</div>