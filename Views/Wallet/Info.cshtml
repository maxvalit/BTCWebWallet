@using BTCWebWallet.Controllers
@using BTCWebWallet.Helpers
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Model?.WalletInfo?.Walletname;
}

@model WalletViewModel

@if (Model != null && Model.IsSuccess)
{
    <h2><a asp-action="Index">@Localizer["Wallets"]</a> > @Model.WalletInfo?.Walletname</h2>

    <div class="row">
        <div class="col">
            <div class="btn-group btn-group-lg">
                <button class="btn btn-lg btn-success" data-bs-toggle="modal" data-bs-target="#sendToAddressModal">
                    <i class="bi bi-send"></i> @Localizer["Send"]
                </button>
                <button class="btn btn-lg btn-info" data-bs-toggle="modal" data-bs-target="#">
                    <i class="bi bi-cloud-download"></i> @Localizer["Backup"]
                </button>
                <a class="btn btn-lg btn-info" asp-action="DumpWallet" asp-route-name="@Model.WalletInfo?.Walletname">
                    <i class="bi bi-key"></i> @Localizer["DumpWallet"]
                </a>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col p-1">
            @await Html.PartialAsync("_WalletInfo", Model.WalletInfo)
        </div>
        <div class="col p-1">
            @await Html.PartialAsync("_Balances", Model)
        </div>
        <div class="col-12 p-1">
            @await Html.PartialAsync("_Addresses", Model)
        </div>
        <div class="col-12 p-1">
            @await Html.PartialAsync("_Transactions", Model)
        </div>
    </div>

    <!-- Send To Address Modal -->
    <div class="modal fade" id="sendToAddressModal" tabindex="-1" aria-labelledby="sendToAddressModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="sendToAddressModalLabel">@Localizer["SendToAddress"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-1">
                        <label for="txtAddress" class="form-label">@Localizer["Address"]</label>
                        <input id="txtAddress" class="form-control" placeholder='@Localizer["EnterReceiverAddress"]' />
                    </div>
                    <div class="mb-1">
                        <label for="txtAmount" class="form-label">@Localizer["Amount"]</label>
                        <input id="txtAmount" class="form-control" placeholder='@Localizer["EnterAnAmount"]' type="number" min="0" step="0.0001" />
                    </div>
                    <div class="mb-1">
                        <label for="txtComment" class="form-label">@Localizer["Comment"]</label>
                        <input id="txtComment" class="form-control" placeholder='@Localizer["EnterAComment"]' />
                    </div>
                    <div class="mb-1">
                        <label for="txtCommentTo" class="form-label">@Localizer["ReceiverName"]</label>
                        <input id="txtCommentTo" class="form-control" placeholder='@Localizer["EnterReceiverName"]' />
                    </div>
                   
                    <div class="mb-1">
                        <label for="txtConf_target" class="form-label">@Localizer["ConfirmationToTarget"]</label>
                        <input id="txtConf_target" class="form-control" placeholder='@Localizer["EnterConfirmationToTargetCount"]' type="number" min="1" value="6" step="1" />
                    </div>
                    <div class="mb-1">
                        <label for="ddEstimate_mode" class="form-label">@Localizer["Estimate_mode"]</label>
                        <select id="ddEstimate_mode" class="form-select" placeholder='@Localizer["SelectEstimate_mode"]'>
                            <option value="unset">unset</option>
                            <option value="economical">economical</option>
                            <option value="conservative">conservative</option>
                        </select>
                    </div>

                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="chkSubtractfeefromamount">
                        <label class="form-check-label" for="chkSubtractfeefromamount">
                            @Localizer["Subtractfeefromamount"]
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="chkReplaceable" checked> 
                        <label class="form-check-label" for="chkReplaceable">
                            @Localizer["Replaceable"]
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="chkAvoidReuse" @(Model.WalletInfo.Avoid_reuse ? "checked" : "")>
                        <label class="form-check-label" for="chkAvoidReuse">
                            @Localizer["AvoidReuse"]
                        </label>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Close"]</button>
                    <button type="button" class="btn btn-primary" onclick="SendToAddress();">@Localizer["Send"]</button>
                </div>
            </div>
        </div> 
    </div>

    <!-- Add Address  Modal -->
    <div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addAddressModalLabel">@Localizer["AddNewAddress"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-1">
                        <label for="txtLabel" class="form-label">@Localizer["Label"]</label>
                        <input id="txtLabel" class="form-control" placeholder='@Localizer["EnterAlabel"]' />
                    </div>
                    <div class="mb-1">
                        <label for="ddAddressType" class="form-label">@Localizer["Label"]</label>
                        <select id="ddAddressType" class="form-select" placeholder='@Localizer["EnterAlabel"]'>
                            <option value="legacy">legacy</option>
                            <option value="p2sh-segwit">p2sh-segwit</option>
                            <option value="bech32">bech32</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Close"]</button>
                    <button type="button" class="btn btn-primary" onclick="AddNewAddress();">@Localizer["Add"]</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Private Key  Modal -->
    <div class="modal fade" id="addPrivKeyModal" tabindex="-1" aria-labelledby="addPrivKeyModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addPrivKeyModalLabel">@Localizer["AddPrivKey"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-1">
                        <label for="txtPrivKey" class="form-label">@Localizer["PrivKey"]</label>
                        <input id="txtPrivKey" class="form-control" placeholder='@Localizer["EnterPrivKey"]' />
                    </div>
                    <div class="mb-1">
                        <label for="txtPrivLabel" class="form-label">@Localizer["Label"]</label>
                        <input id="txtPrivLabel" class="form-control" placeholder='@Localizer["EnterAlabel"]' />
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="chkRescan" checked>
                        <label class="form-check-label" for="chkRescan">
                            @Localizer["Rescan"]
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Close"]</button>
                    <button type="button" class="btn btn-primary" onclick="ImportPrivKey();">@Localizer["Add"]</button>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
<script>
    function Unlock() {
        var passphrase = $("#passphrase").val();
        var name = "@Model?.WalletInfo?.Walletname";

        var controllerName = "Wallet";
        var actionName = "@nameof(WalletController.Unlock)";
        var url = `/${controllerName}/${actionName}`;
        var model = {
            passphrase: passphrase,
            name: name
        };

        $.post(url, model, "json")
            .done(function (result) {
                window.location.reload();
            });
    }

    function SendToAddress() {
        var name = "@Model?.WalletInfo?.Walletname";
        var address = $("#txtAddress").val();
        var amount = $("#txtAmount").val();
        var comment = $("#txtComment").val();
        var comment_to = $("#txtCommentTo").val();
        var conf_target = $("#txtConf_target").val();
        var estimate_mode = $("#ddEstimate_mode").val();
        var subtractfeefromamount = $("#chkSubtractfeefromamount").prop("checked");
        var replaceable = $("#chkReplaceable").prop("checked");
        var avoidReuse = $("#chkAvoidReuse").prop("checked");

        var controllerName = "Wallet";
        var actionName = "@nameof(WalletController.SendToAddress)";
        var url = `/${controllerName}/${actionName}`;
        var model = {
            name: name,
            address: address,
            amount: amount,
            comment: comment,
            comment_to: comment_to,
            conf_target: conf_target,
            estimate_mode: estimate_mode,
            subtractfeefromamount: subtractfeefromamount,
            replaceable: replaceable,
            avoidReuse: avoidReuse
        };

        $.post(url, model, "json")
            .done(function (result) {
                window.location.reload();
            });
    }

    function AddNewAddress() {
        var name = "@Model?.WalletInfo?.Walletname";
        var label = $("#txtLabel").val();
        var addressType = $("#ddAddressType").val();

        var controllerName = "Wallet";
        var actionName = "@nameof(WalletController.AddNewAddress)";
        var url = `/${controllerName}/${actionName}`;
        var model = {
            name: name,
            label: label,
            addressType: addressType
        };

        $.post(url, model, "json")
            .done(function (result) {
                window.location.reload();
            });
    }


    function DumpPrivKey(address) {
        if (!address)
            return;

        var name = "@Model?.WalletInfo?.Walletname";

        var controllerName = "Wallet";
        var actionName = "@nameof(WalletController.DumpPrivKey)";
        var url = `/${controllerName}/${actionName}`;
        var model = {
            name: name,
            address: address
        };

        $.post(url, model, "json")
            .done(function (result) {
                $("#priv_" + address).text(result);
            });
    }

    function ImportPrivKey() {
        var name = "@Model?.WalletInfo?.Walletname";
        var privkey = $("#txtPrivKey").val();
        var label = $("#txtPrivLabel").val();
        var rescan = $("#chkRescan").prop("checked");

        if (!privkey)
            return;

        var controllerName = "Wallet";
        var actionName = "@nameof(WalletController.ImportPrivKey)"; 
        var url = `/${controllerName}/${actionName}`;
        var model = {
            name: name,
            privkey: privkey,
            label: label,
            rescan: rescan
        };

        $.post(url, model, "json")
            .done(function (result) {
                window.location.reload();
            });
    }
</script>
}